{"version":3,"sources":["img/persik.png","panels/Home.js","panels/Persik.js","App.js","index.js","img/ComedyRadioHomeSiteLogo.svg"],"names":["module","exports","Home","id","go","fetchedUser","className","src","ComedyRadioHomeSiteLogo","alt","title","size","level","onClick","data-to","href","target","osName","platform","Persik","props","left","IOS","persik","App","useState","activePanel","setActivePanel","setUser","popout","setPopout","useEffect","a","connect","send","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"+HAAAA,EAAOC,QAAU,IAA0B,oC,slBC+C5BC,EApCF,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,GAAP,EAAWC,YAAX,OACZ,kBAAC,IAAD,CAAOF,GAAIA,GACV,yBAAKG,UAAU,SAASC,IAAKC,IAAyBC,IAAI,mBAC1D,kBAAC,IAAD,0BAEA,kBAAC,IAAD,CAAOC,MAAM,sBACZ,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAQC,KAAK,KAAKC,MAAM,IAAIC,QAAST,EAAIU,UAAQ,UAAjD,gCAMF,yBAAKR,UAAU,SAASC,IAAKC,IAAyBC,IAAI,mBAE1D,kBAAC,IAAD,CAAOC,MAAM,sBACX,kBAAC,IAAD,CAAQC,KAAK,KAAKC,MAAM,IAAIG,KAAK,2BAA2BC,OAAO,UAClE,yBAAKV,UAAU,SAASC,IAAKC,IAAyBC,IAAI,uB,gFChBzDQ,G,OAASC,eAoBAC,EAlBA,SAAAC,GAAK,OACnB,kBAAC,IAAD,CAAOjB,GAAIiB,EAAMjB,IAChB,kBAAC,IAAD,CACCkB,KAAM,kBAAC,IAAD,CAAmBR,QAASO,EAAMhB,GAAIU,UAAQ,QAClDG,IAAWK,IAAM,kBAAC,IAAD,MAAuB,kBAAC,IAAD,QAF3C,UAOA,yBAAKhB,UAAU,SAASC,IAAKgB,IAAQd,IAAI,qBCkB5Be,EAjCH,WAAO,IAAD,EACqBC,mBAAS,QAD9B,mBACVC,EADU,KACGC,EADH,OAEcF,mBAAS,MAFvB,mBAEVpB,EAFU,KAEGuB,EAFH,OAGWH,mBAAS,MAHpB,mBAGVI,EAHU,KAGFC,EAHE,KAKjBC,qBAAU,WAAM,4CAQf,4BAAAC,EAAA,sEACoBC,IAAQC,KAAK,uBADjC,OACOC,EADP,OAECP,EAAQO,GACRL,EAAU,MAHX,4CARe,sBACfG,IAAQG,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,KACpC,GAAa,yBAATD,EAAiC,CACpC,IAAME,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQJ,EAAKK,OAASL,EAAKK,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,OALzB,mCAafQ,KACE,IAEH,IAAM5C,EAAK,SAAA6C,GACVtB,EAAesB,EAAEC,cAAcC,QAAQC,KAGxC,OACC,kBAAC,IAAD,CAAM1B,YAAaA,EAAaG,OAAQA,GACvC,kBAAC,EAAD,CAAM1B,GAAG,OAAOE,YAAaA,EAAaD,GAAIA,IAC9C,kBAAC,EAAD,CAAQD,GAAG,SAASC,GAAIA,MC3B3B6B,IAAQC,KAAK,gBAQbmB,IAASC,OAAO,kBAAC,EAAD,MAASb,SAASc,eAAe,U,mBCjBjDvD,EAAOC,QAAU,IAA0B,sD","file":"static/js/main.3605321e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport ComedyRadioHomeSiteLogo from '../img/ComedyRadioHomeSiteLogo.svg';\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<img className=\"Persik\" src={ComedyRadioHomeSiteLogo} alt=\"Persik The Cat\"/>\n\t\t<PanelHeader>Comedy Radio Live</PanelHeader>\n\t\t\n\t\t<Group title=\"Navigation Example\">\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"persik\">\n\t\t\t\t\tShow me the Persik, please\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\n\t\t<img className=\"Persik\" src={ComedyRadioHomeSiteLogo} alt=\"Persik The Cat\"/>\n\n\t\t<Group title=\"Navigation Example\">\n\t\t\t\t<Button size=\"xl\" level=\"2\" href=\"https://comedy-radio.ru/\" target=\"_blank\">\n\t\t\t\t\t<img className=\"Persik\" src={ComedyRadioHomeSiteLogo} alt=\"Persik The Cat\"/>\n\t\t\t\t</Button>\n\t\t</Group>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</PanelHeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(null);\n\n\tuseEffect(() => {\n\t\tconnect.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await connect.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t<Persik id='persik' go={go} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/ComedyRadioHomeSiteLogo.ac379203.svg\";"],"sourceRoot":""}